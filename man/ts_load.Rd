% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tree-sequences.R
\name{ts_load}
\alias{ts_load}
\title{Load a tree sequence file produced by a given model}
\usage{
ts_load(
  source = NULL,
  file = NULL,
  recapitate = FALSE,
  simplify = FALSE,
  mutate = FALSE,
  spatial = TRUE,
  recombination_rate = NULL,
  mutation_rate = NULL,
  Ne = NULL,
  random_seed = NULL,
  simplify_to = NULL,
  keep_input_roots = FALSE,
  migration_matrix = NULL
)
}
\arguments{
\item{source}{Either a compiled \code{slendr_model} object encoding the
definition of a slendr model used to produce a tree-sequence file (see the
argument \code{param}), or a path to a tree-sequence file coming from a
non-slendr simulation.}

\item{file}{A path to the tree sequence file generated by the model
specified by the argument \code{source}. If missing, an attempt will be
made to search for a tree-sequence file in the model directory.}

\item{recapitate}{Should the tree sequence be recapitated?}

\item{simplify}{Should the tree sequence be simplified down to only
explicitly sampled individuals?}

\item{mutate}{Should the tree sequence be mutated?}

\item{spatial}{Should spatial information encoded in the tree sequence data
be converted to spatial R data structures? If \code{FALSE}, pixel-based
raster-dimensions will not be converted to the coordinate reference system
implied by the model. If \code{TRUE} (default), reprojection of coordinates
will be performed. If the model was non-spatial, the value of this
parameter is disregarded.}

\item{recombination_rate, Ne}{Arguments passed to \code{ts_recapitate}}

\item{mutation_rate}{Mutation rate passed to \code{ts_mutate}}

\item{random_seed}{Random seed passed to pyslim's \code{recapitate} method}

\item{simplify_to}{A character vector of individual names. If NULL, all
remembered individuals will be retained. Only used when \code{simplify =
  TRUE}.}

\item{keep_input_roots}{Should the history ancestral to the MRCA of all
samplbee retained in the tree sequence? Default is \code{FALSE}.}

\item{migration_matrix}{Migration matrix used for coalescence of ancient
lineages (passed to \code{ts_recapitate})}
}
\value{
Tree sequence object of the class \code{slendr_ts}
}
\description{
This function loads a tree sequence file simulated from a given slendr model.
Optionally, the tree sequence can be recapitated and simplified.
}
\details{
The loading, recapitation and simplification is performed using the Python
module pyslim which serves as a link between tree sequences generated by SLiM
and the tskit module for manipulation of tree sequence data. All of these
steps have been modelled after the official pyslim tutorial and documentation
available at: \url{https://tskit.dev/pyslim/docs/latest/tutorial.html}.

The recapitation and simplification steps can also be performed individually
using the functions \code{\link{ts_recapitate}} and
\code{\link{ts_simplify}}.
}
\examples{
\dontrun{
# load tree sequence from its default location in a model directory
ts <- ts_load(model)

# load tree sequence from another location
ts <- ts_load(model, file = "output.trees")

# load tree sequence and immediately simplify it only to sampled individuals
ts <- ts_load(model, simplify = TRUE)

# load tree sequence and simplify it to a subset of sampled individuals
ts_small <- ts_simplify(ts, simplify_to = c("CH_1", "NEA_1", "NEA_2",
                                            "AFR_1", "AFR_2", "EUR_20", "EUR_50"))

# load tree sequence, recapitate it and simplify it
ts <- ts_load(model, recapitate = TRUE, simplify = TRUE,
              recombination_rate = 1e-8, Ne = 10000)

# load tree sequence, recapitate it, simplify it and overlay neutral mutations
ts <- ts_load(model, recapitate = TRUE, simplify = TRUE, random_seed = 42,
              recombination_rate = 1e-8, Ne = 10000, mutation_rate = 1e-8)
}

}
\seealso{
\code{\link{ts_data}} for extracting useful information about
individuals, nodes, coalescent times and geospatial locations of nodes on a
map
}
